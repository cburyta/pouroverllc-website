{"version": 2, "width": 139, "height": 45, "timestamp": 1558848057, "idle_time_limit": 0.5, "env": {"SHELL": "/bin/zsh", "TERM": "screen-256color"}}
[0.018292, "o", "\u001b[?1049h\u001b[?1h\u001b=\u001b[H\u001b[J\u001b[34h\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1006l\u001b[?1005l\u001b[c\u001b[m\u000f\u001b[34l\u001b[34h\u001b[?25h\u001b[?1003l\u001b[?1006l\u001b[?2004l\u001b[1;1H\u001b[1;45r\u001b[24;48H\u001b[?1006h\u001b[?1002h\u001b[?2004h"]
[0.020086, "o", "\u001b[23;1H──────────────────────────────────────────────────────────────────────\u001b[32m─────────────────────────────────────────────────────────────────────\u001b[?25l\u001b[m\u000f\u001b[38;5;159m\u001b[1;1H▸\u001b[39m \u001b[38;5;159mnode_modules\u001b[96m\u001b[1m/\u001b[m\u000f               \u001b[7m|\u001b[m\u000f\u001b[93m  2 \u001b[96m// results in a database pool that will be used to connect\u001b[39m                                              \u001b[38;5;159m\u001b[2;1H▾\u001b[39m \u001b[38;5;159msrc\u001b[96m\u001b[1m/\u001b[m\u000f                        \u001b[7m|\u001b[m\u000f\u001b[93m  3 \u001b[38;5;121mconst\u001b[39m config \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'../config/knexfile'\u001b[39m)                                                            \u001b[3;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mconfig\u001b[96m\u001b[1m/\u001b[m\u000f                   \u001b[7m|\u001b[m\u000f\u001b[93m  4 \u001b[38;5;121mconst\u001b[39m knex \u001b[93m="]
[0.020235, "o", "\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'knex'\u001b[39m)(config)                                                                    \u001b[4;6H\u001b[1K\u001b[Cknexfile.js             \u001b[7m|\u001b[m\u000f\u001b[93m  5 \u001b[39m                                                                                                        \u001b[5;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mhandlers\u001b[96m\u001b[1m/\u001b[m\u000f                 \u001b[7m|\u001b[m\u000f\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;6H\u001b[1K\u001b[Cindex.js                \u001b[7m|\u001b[m\u000f\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[7;6H\u001b[1K\u001b[Crds.js                  \u001b[7m|\u001b[m\u000f\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;6H\u001b[1K\u001b[CtestErrors.js           \u001b[7m|\u001b[m\u000f\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[9;6H\u001b[1K\u001b[CtestTimeout.j"]
[0.020352, "o", "s          \u001b[7m|\u001b[m\u000f\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[38;5;159m\u001b[10;1H▸\u001b[39m \u001b[38;5;159mtest\u001b[96m\u001b[1m/\u001b[m\u000f                       \u001b[7m|\u001b[m\u000f\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[11;1H  .env                        \u001b[7m|\u001b[m\u000f\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;1H  .gitignore                  \u001b[7m|\u001b[m\u000f\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[13;1H  package.json                \u001b[7m|\u001b[m\u000f\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[14;1H  serverless.yml              \u001b[7m|\u001b[m\u000f\u001b[93m 15 \u001b[39m                                                        "]
[0.020526, "o", "                                                \u001b[15;1H  yarn.lock                   \u001b[7m|\u001b[m\u000f\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[94m\u001b[16;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[94m\u001b[17;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[94m\u001b[18;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 19 \u001b[39m                                                                                                        \u001b[94m\u001b[19;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[94m\u001b[20;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 21 \u001b[96m// Th"]
[0.020614, "o", "is handler will first open a connection if one does not exist\u001b[39m                                      \u001b[38;5;243m\u001b[48;5;235m\u001b[21;1H NERD \u001b[38;5;235m\u001b[38;5;243m                      \u001b[39m\u001b[49m\u001b[7m \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[1mNORMAL\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[38;5;192m\u001b[48;5;238m  masterɆ \u001b[38;5;238m\u001b[48;5;235m\u001b[38;5;192m src/handlers/rds.js  \u001b[38;5;235m\u001b[38;5;192m javascript \u001b[38;5;238m\u001b[38;5;192m\u001b[48;5;238m utf-8[unix] \u001b[38;5;232m\u001b[48;5;192m  17% \u001b[1m☰   10/58 \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m :  3 \u001b[38;5;166m\u001b[38;5;232m\u001b[48;5;166m ☲ [32]tra… \u001b[38;5;160m\u001b[39m\u001b[49m\u001b[22;1H\u001b[K\u001b[2Bin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[42m\r\n[blog] 1:zsh* 2:zsh-\u001b[39m                                                                                          \u001b[30m\"mbpro.local\" 01:20 26-May-19\u001b[m\u000f\u001b[24;48H\u001b[34h\u001b[?25h\u001b[m\u000f\u001b[34l\u001b[34h\u001b[?25h\u001b[?1003l\u001b[?1006l\u001b[?"]
[0.020844, "o", "2004l\u001b[1;1H\u001b[1;45r\u001b[24;48H\u001b[?1006h\u001b[?1002h\u001b[?2004h"]
[0.022322, "o", "\u001b[23;1H──────────────────────────────────────────────────────────────────────\u001b[32m─────────────────────────────────────────────────────────────────────\u001b[?25l\u001b[m\u000f\u001b[38;5;159m\u001b[1;1H▸\u001b[39m \u001b[38;5;159mnode_modules\u001b[96m\u001b[1m/\u001b[m\u000f               \u001b[7m|\u001b[m\u000f\u001b[93m  2 \u001b[96m// results in a database pool that will be used to connect\u001b[39m                                              \u001b[38;5;159m\u001b[2;1H▾\u001b[39m \u001b[38;5;159msrc\u001b[96m\u001b[1m/\u001b[m\u000f                        \u001b[7m|\u001b[m\u000f\u001b[93m  3 \u001b[38;5;121mconst\u001b[39m config \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'../config/knexfile'\u001b[39m)                                                            \u001b[3;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mconfig\u001b[96m\u001b[1m/\u001b[m\u000f                   \u001b[7m|\u001b[m\u000f\u001b[93m  4 \u001b[38;5;121mconst\u001b[39m knex \u001b[93m="]
[0.022444, "o", "\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'knex'\u001b[39m)(config)                                                                    \u001b[4;6H\u001b[1K\u001b[Cknexfile.js             \u001b[7m|\u001b[m\u000f\u001b[93m  5 \u001b[39m                                                                                                        \u001b[5;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mhandlers\u001b[96m\u001b[1m/\u001b[m\u000f                 \u001b[7m|\u001b[m\u000f\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;6H\u001b[1K\u001b[Cindex.js                \u001b[7m|\u001b[m\u000f\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[7;6H\u001b[1K\u001b[Crds.js                  \u001b[7m|\u001b[m\u000f\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;6H\u001b[1K\u001b[CtestErrors.js           \u001b[7m|\u001b[m\u000f\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[9;6H\u001b[1K\u001b[CtestTimeout.j"]
[0.022546, "o", "s          \u001b[7m|\u001b[m\u000f\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[38;5;159m\u001b[10;1H▸\u001b[39m \u001b[38;5;159mtest\u001b[96m\u001b[1m/\u001b[m\u000f                       \u001b[7m|\u001b[m\u000f\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[11;1H  .env                        \u001b[7m|\u001b[m\u000f\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;1H  .gitignore                  \u001b[7m|\u001b[m\u000f\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[13;1H  package.json                \u001b[7m|\u001b[m\u000f\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[14;1H  serverless.yml              \u001b[7m|\u001b[m\u000f\u001b[93m 15 \u001b[39m                                                        "]
[0.02268, "o", "                                                \u001b[15;1H  yarn.lock                   \u001b[7m|\u001b[m\u000f\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[94m\u001b[16;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[94m\u001b[17;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[94m\u001b[18;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 19 \u001b[39m                                                                                                        \u001b[94m\u001b[19;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[94m\u001b[20;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 21 \u001b[96m// Th"]
[0.0228, "o", "is handler will first open a connection if one does not exist\u001b[39m                                      \u001b[38;5;243m\u001b[48;5;235m\u001b[21;1H NERD \u001b[38;5;235m\u001b[38;5;243m                      \u001b[39m\u001b[49m\u001b[7m \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[1mNORMAL\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[38;5;192m\u001b[48;5;238m  masterɆ \u001b[38;5;238m\u001b[48;5;235m\u001b[38;5;192m src/handlers/rds.js  \u001b[38;5;235m\u001b[38;5;192m javascript \u001b[38;5;238m\u001b[38;5;192m\u001b[48;5;238m utf-8[unix] \u001b[38;5;232m\u001b[48;5;192m  17% \u001b[1m☰   10/58 \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m :  3 \u001b[38;5;166m\u001b[38;5;232m\u001b[48;5;166m ☲ [32]tra… \u001b[38;5;160m\u001b[39m\u001b[49m\u001b[22;1H\u001b[K\u001b[2Bin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[42m\r\n[blog] 1:zsh* 2:zsh-\u001b[39m                                                                                          \u001b[30m\"mbpro.local\" 01:20 26-May-19\u001b[m\u000f\u001b[24;48H\u001b[34h\u001b[?25h"]
[0.988211, "o", "s"]
[1.054669, "o", "\bsl"]
[1.150157, "o", "s"]
[1.255482, "o", " "]
[1.871534, "o", "i"]
[1.967991, "o", "n"]
[2.147409, "o", "v"]
[2.233479, "o", "o"]
[2.473225, "o", "k"]
[2.994585, "o", "e"]
[3.092445, "o", " "]
[3.270738, "o", "-"]
[3.568034, "o", "f"]
[3.642262, "o", " "]
[4.298237, "o", "c"]
[4.899734, "o", "h"]
[5.041306, "o", "e"]
[5.258548, "o", "c"]
[5.336565, "o", "k"]
[5.64573, "o", "D"]
[5.845496, "o", "a"]
[5.960044, "o", "t"]
[6.073369, "o", "a"]
[6.279935, "o", "b"]
[6.471315, "o", "a"]
[6.504363, "o", "s"]
[6.590397, "o", "e"]
[7.370803, "o", "C"]
[7.572528, "o", "o"]
[7.75645, "o", "n"]
[7.913793, "o", "n"]
[8.014465, "o", "e"]
[8.26966, "o", "c"]
[8.489433, "o", "t"]
[8.588481, "o", "i"]
[8.757335, "o", "o"]
[8.83844, "o", "n"]
[9.02345, "o", "\r\n\u001b[?2004l"]
[10.850965, "o", "\"Postgres: connection test success\"\r\n"]
[10.855103, "o", "\u001b[3A──────────────────────────────────────────────────────────────────────\u001b[32m─────────────────────────────────────────────────────────────────────\u001b[?25l\u001b[m\u000f\u001b[38;5;159m\u001b[1;1H▸\u001b[39m \u001b[38;5;159mnode_modules\u001b[96m\u001b[1m/\u001b[m\u000f               \u001b[7m|\u001b[m\u000f\u001b[93m  2 \u001b[96m// results in a database pool that will be used to connect\u001b[39m                                              \u001b[38;5;159m\u001b[2;1H▾\u001b[39m \u001b[38;5;159msrc\u001b[96m\u001b[1m/\u001b[m\u000f                        \u001b[7m|\u001b[m\u000f\u001b[93m  3 \u001b[38;5;121mconst\u001b[39m config \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'../config/knexfile'\u001b[39m)                                                            \u001b[3;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mconfig\u001b[96m\u001b[1m/\u001b[m\u000f                   \u001b[7m|\u001b[m\u000f\u001b[93m  4 \u001b[38;5;121mconst\u001b[39m knex \u001b[93m=\u001b[3"]
[10.855676, "o", "9m \u001b[95mrequire\u001b[39m(\u001b[95m'knex'\u001b[39m)(config)                                                                    \u001b[4;6H\u001b[1K\u001b[Cknexfile.js             \u001b[7m|\u001b[m\u000f\u001b[93m  5 \u001b[39m                                                                                                        \u001b[5;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mhandlers\u001b[96m\u001b[1m/\u001b[m\u000f                 \u001b[7m|\u001b[m\u000f\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;6H\u001b[1K\u001b[Cindex.js                \u001b[7m|\u001b[m\u000f\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[7;6H\u001b[1K\u001b[Crds.js                  \u001b[7m|\u001b[m\u000f\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;6H\u001b[1K\u001b[CtestErrors.js           \u001b[7m|\u001b[m\u000f\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[9;6H\u001b[1K\u001b[CtestTimeout.js  "]
[10.855836, "o", "        \u001b[7m|\u001b[m\u000f\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[38;5;159m\u001b[10;1H▸\u001b[39m \u001b[38;5;159mtest\u001b[96m\u001b[1m/\u001b[m\u000f                       \u001b[7m|\u001b[m\u000f\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[11;1H  .env                        \u001b[7m|\u001b[m\u000f\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;1H  .gitignore                  \u001b[7m|\u001b[m\u000f\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[13;1H  package.json                \u001b[7m|\u001b[m\u000f\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[14;1H  serverless.yml              \u001b[7m|\u001b[m\u000f\u001b[93m 15 \u001b[39m                                                           "]
[10.856723, "o", "                                             \u001b[15;1H  yarn.lock                   \u001b[7m|\u001b[m\u000f\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[94m\u001b[16;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[94m\u001b[17;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[94m\u001b[18;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 19 \u001b[39m                                                                                                        \u001b[94m\u001b[19;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[94m\u001b[20;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 21 \u001b[96m// This "]
[10.856788, "o", "handler will first open a connection if one does not exist\u001b[39m                                      \u001b[38;5;243m\u001b[48;5;235m\u001b[21;1H NERD \u001b[38;5;235m\u001b[38;5;243m                      \u001b[39m\u001b[49m\u001b[7m \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[1mNORMAL\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[38;5;192m\u001b[48;5;238m  masterɆ \u001b[38;5;238m\u001b[48;5;235m\u001b[38;5;192m src/handlers/rds.js  \u001b[38;5;235m\u001b[38;5;192m javascript \u001b[38;5;238m\u001b[38;5;192m\u001b[48;5;238m utf-8[unix] \u001b[38;5;232m\u001b[48;5;192m  17% \u001b[1m☰   10/58 \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m :  3 \u001b[38;5;166m\u001b[38;5;232m\u001b[48;5;166m ☲ [32]tra… \u001b[38;5;160m\u001b[39m\u001b[49m\u001b[22;1H\u001b[K\u001b[2Bin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f checkDatabaseConnection\u001b[K\r\n\"Postgres: connection test success\"\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[42m\r\n[blog] 1:node* 2:zsh-\u001b[39m                                                                                         \u001b[30m\"mbpro.local\" 01:21 26"]
[10.857162, "o", "-May-19\u001b[m\u000f\u001b[26;1H\u001b[34h\u001b[?25h"]
[10.869413, "o", "\u001b[1m\u001b[3m%\u001b[m\u000f                                                                                                                                          \u001b[26;1H \r"]
[10.937778, "o", "\u001b[24;44r\u001b[27;44r\u001b[18S\u001b[26;1H\u001b[Kin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › \u001b[K\u001b[1;45r\u001b[26;48H\u001b[?2004h"]
[12.675088, "o", "\u001b[?25l\u001b[30m\u001b[42m\u001b[45;1H[blog] 1:zsh* 2:zsh-\u001b[39m                                                                                          \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[26;48H\u001b[34h\u001b[?25h"]
[12.676, "o", "sls invoke -f checkDatabaseConnection"]
[13.550692, "o", "\r\n\u001b[?2004l"]
[14.586094, "o", "\"Postgres: connection test fail\"\r\n"]
[14.591405, "o", "\u001b[?25l\u001b[30m\u001b[42m\u001b[45d[blog] 1:node* 2:zsh-\u001b[39m                                                                                         \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[28;1H\u001b[34h\u001b[?25h"]
[14.604802, "o", "\u001b[1m\u001b[3m%\u001b[m\u000f                                                                                                                                          \u001b[28;1H \r"]
[14.671589, "o", "\u001b[24;44r\u001b[29;44r\u001b[16S\u001b[28;1H\u001b[Kin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › \u001b[K\u001b[1;45r\u001b[28;48H\u001b[?2004h"]
[17.01412, "o", "\u001b[?25l\u001b[30m\u001b[42m\u001b[45;1H[blog] 1:zsh* 2:zsh-\u001b[39m                                                                                          \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[28;48H\u001b[34h\u001b[?25h"]
[17.015034, "o", "sls invoke -f checkDatabaseConnection"]
[17.417343, "o", "P"]
[17.605327, "o", "r"]
[17.702586, "o", "o"]
[17.874658, "o", "p"]
[17.972851, "o", "e"]
[18.061786, "o", "r"]
[18.497071, "o", "\r\n\u001b[?2004l"]
[20.201913, "o", "\"Postgres: connection test success\"\r\n"]
[20.204955, "o", "\u001b[7A──────────────────────────────────────────────────────────────────────\u001b[32m─────────────────────────────────────────────────────────────────────\u001b[?25l\u001b[m\u000f\u001b[38;5;159m\u001b[1;1H▸\u001b[39m \u001b[38;5;159mnode_modules\u001b[96m\u001b[1m/\u001b[m\u000f               \u001b[7m|\u001b[m\u000f\u001b[93m  2 \u001b[96m// results in a database pool that will be used to connect\u001b[39m                                              \u001b[38;5;159m\u001b[2;1H▾\u001b[39m \u001b[38;5;159msrc\u001b[96m\u001b[1m/\u001b[m\u000f                        \u001b[7m|\u001b[m\u000f\u001b[93m  3 \u001b[38;5;121mconst\u001b[39m config \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'../config/knexfile'\u001b[39m)                                                            \u001b[3;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mconfig\u001b[96m\u001b[1m/\u001b[m\u000f                   \u001b[7m|\u001b[m\u000f\u001b[93m  4 \u001b[38;5;121mconst\u001b[39m knex \u001b[93m=\u001b[3"]
[20.205657, "o", "9m \u001b[95mrequire\u001b[39m(\u001b[95m'knex'\u001b[39m)(config)                                                                    \u001b[4;6H\u001b[1K\u001b[Cknexfile.js             \u001b[7m|\u001b[m\u000f\u001b[93m  5 \u001b[39m                                                                                                        \u001b[5;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mhandlers\u001b[96m\u001b[1m/\u001b[m\u000f                 \u001b[7m|\u001b[m\u000f\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;6H\u001b[1K\u001b[Cindex.js                \u001b[7m|\u001b[m\u000f\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[7;6H\u001b[1K\u001b[Crds.js                  \u001b[7m|\u001b[m\u000f\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;6H\u001b[1K\u001b[CtestErrors.js           \u001b[7m|\u001b[m\u000f\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[9;6H\u001b[1K\u001b[CtestTimeout.js  "]
[20.205839, "o", "        \u001b[7m|\u001b[m\u000f\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[38;5;159m\u001b[10;1H▸\u001b[39m \u001b[38;5;159mtest\u001b[96m\u001b[1m/\u001b[m\u000f                       \u001b[7m|\u001b[m\u000f\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[11;1H  .env                        \u001b[7m|\u001b[m\u000f\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;1H  .gitignore                  \u001b[7m|\u001b[m\u000f\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[13;1H  package.json                \u001b[7m|\u001b[m\u000f\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[14;1H  serverless.yml              \u001b[7m|\u001b[m\u000f\u001b[93m 15 \u001b[39m                                                           "]
[20.206388, "o", "                                             \u001b[15;1H  yarn.lock                   \u001b[7m|\u001b[m\u000f\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[94m\u001b[16;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[94m\u001b[17;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[94m\u001b[18;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 19 \u001b[39m                                                                                                        \u001b[94m\u001b[19;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[94m\u001b[20;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 21 \u001b[96m// This "]
[20.206704, "o", "handler will first open a connection if one does not exist\u001b[39m                                      \u001b[38;5;243m\u001b[48;5;235m\u001b[21;1H NERD \u001b[38;5;235m\u001b[38;5;243m                      \u001b[39m\u001b[49m\u001b[7m \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[1mNORMAL\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[38;5;192m\u001b[48;5;238m  masterɆ \u001b[38;5;238m\u001b[48;5;235m\u001b[38;5;192m src/handlers/rds.js  \u001b[38;5;235m\u001b[38;5;192m javascript \u001b[38;5;238m\u001b[38;5;192m\u001b[48;5;238m utf-8[unix] \u001b[38;5;232m\u001b[48;5;192m  17% \u001b[1m☰   10/58 \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m :  3 \u001b[38;5;166m\u001b[38;5;232m\u001b[48;5;166m ☲ [32]tra… \u001b[38;5;160m\u001b[39m\u001b[49m\u001b[22;1H\u001b[K\u001b[2Bin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f checkDatabaseConnection\u001b[K\r\n\"Postgres: connection test success\"\u001b[K\r\nin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f checkDatabaseConnection\u001b[K\r\n\"Postgres: connection test fail\"\u001b[K\r\nin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f chec"]
[20.207474, "o", "kDatabaseConnectionProper\u001b[K\r\n\"Postgres: connection test success\"\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[42m\r\n[blog] 1:node* 2:zsh-\u001b[39m                                                                                         \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[30;1H\u001b[34h\u001b[?25h"]
[20.219248, "o", "\u001b[1m\u001b[3m%\u001b[m\u000f                                                                                                                                          \u001b[30;1H \r"]
[20.28944, "o", "\u001b[24;44r\u001b[31;44r\u001b[14S\u001b[30;1H\u001b[Kin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › \u001b[K\u001b[1;45r\u001b[30;48H\u001b[?2004h"]
[20.956242, "o", "\u001b[?25l\u001b[30m\u001b[42m\u001b[45;1H[blog] 1:zsh* 2:zsh-\u001b[39m                                                                                          \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[30;48H\u001b[34h\u001b[?25h"]
[20.956653, "o", "sls invoke -f checkDatabaseConnectionProper"]
[21.563105, "o", "\r\n\u001b[?2004l"]
[22.628376, "o", "\"Postgres: connection test success\"\r\n"]
[22.632454, "o", "\u001b[9A──────────────────────────────────────────────────────────────────────\u001b[32m─────────────────────────────────────────────────────────────────────\u001b[?25l\u001b[m\u000f\u001b[38;5;159m\u001b[1;1H▸\u001b[39m \u001b[38;5;159mnode_modules\u001b[96m\u001b[1m/\u001b[m\u000f               \u001b[7m|\u001b[m\u000f\u001b[93m  2 \u001b[96m// results in a database pool that will be used to connect\u001b[39m                                              \u001b[38;5;159m\u001b[2;1H▾\u001b[39m \u001b[38;5;159msrc\u001b[96m\u001b[1m/\u001b[m\u000f                        \u001b[7m|\u001b[m\u000f\u001b[93m  3 \u001b[38;5;121mconst\u001b[39m config \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'../config/knexfile'\u001b[39m)                                                            \u001b[3;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mconfig\u001b[96m\u001b[1m/\u001b[m\u000f                   \u001b[7m|\u001b[m\u000f\u001b[93m  4 \u001b[38;5;121mconst\u001b[39m knex \u001b[93m=\u001b[3"]
[22.632732, "o", "9m \u001b[95mrequire\u001b[39m(\u001b[95m'knex'\u001b[39m)(config)                                                                    \u001b[4;6H\u001b[1K\u001b[Cknexfile.js             \u001b[7m|\u001b[m\u000f\u001b[93m  5 \u001b[39m                                                                                                        \u001b[5;1H  \u001b[38;5;159m▾\u001b[39m \u001b[38;5;159mhandlers\u001b[96m\u001b[1m/\u001b[m\u000f                 \u001b[7m|\u001b[m\u000f\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;6H\u001b[1K\u001b[Cindex.js                \u001b[7m|\u001b[m\u000f\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[7;6H\u001b[1K\u001b[Crds.js                  \u001b[7m|\u001b[m\u000f\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;6H\u001b[1K\u001b[CtestErrors.js           \u001b[7m|\u001b[m\u000f\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[9;6H\u001b[1K\u001b[CtestTimeout.js  "]
[22.633273, "o", "        \u001b[7m|\u001b[m\u000f\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[38;5;159m\u001b[10;1H▸\u001b[39m \u001b[38;5;159mtest\u001b[96m\u001b[1m/\u001b[m\u000f                       \u001b[7m|\u001b[m\u000f\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[11;1H  .env                        \u001b[7m|\u001b[m\u000f\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;1H  .gitignore                  \u001b[7m|\u001b[m\u000f\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[13;1H  package.json                \u001b[7m|\u001b[m\u000f\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[14;1H  serverless.yml              \u001b[7m|\u001b[m\u000f\u001b[93m 15 \u001b[39m                                                           "]
[22.633673, "o", "                                             \u001b[15;1H  yarn.lock                   \u001b[7m|\u001b[m\u000f\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[94m\u001b[16;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[94m\u001b[17;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[94m\u001b[18;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 19 \u001b[39m                                                                                                        \u001b[94m\u001b[19;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[94m\u001b[20;1H~                             \u001b[39m\u001b[7m|\u001b[m\u000f\u001b[93m 21 \u001b[96m// This "]
[22.634249, "o", "handler will first open a connection if one does not exist\u001b[39m                                      \u001b[38;5;243m\u001b[48;5;235m\u001b[21;1H NERD \u001b[38;5;235m\u001b[38;5;243m                      \u001b[39m\u001b[49m\u001b[7m \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[1mNORMAL\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[38;5;192m\u001b[48;5;238m  masterɆ \u001b[38;5;238m\u001b[48;5;235m\u001b[38;5;192m src/handlers/rds.js  \u001b[38;5;235m\u001b[38;5;192m javascript \u001b[38;5;238m\u001b[38;5;192m\u001b[48;5;238m utf-8[unix] \u001b[38;5;232m\u001b[48;5;192m  17% \u001b[1m☰   10/58 \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m :  3 \u001b[38;5;166m\u001b[38;5;232m\u001b[48;5;166m ☲ [32]tra… \u001b[38;5;160m\u001b[39m\u001b[49m\u001b[22;1H\u001b[K\u001b[2Bin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f checkDatabaseConnection\u001b[K\r\n\"Postgres: connection test success\"\u001b[K\r\nin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f checkDatabaseConnection\u001b[K\r\n\"Postgres: connection test fail\"\u001b[K\r\nin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f chec"]
[22.634329, "o", "kDatabaseConnectionProper\u001b[K\r\n\"Postgres: connection test success\"\u001b[K\r\nin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › sls invoke -f checkDatabaseConnectionProper\u001b[K\r\n\"Postgres: connection test success\"\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[42m\r\n[blog] 1:node* 2:zsh-\u001b[39m                                                                                         \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[32;1H\u001b[34h\u001b[?25h"]
[22.646759, "o", "\u001b[1m\u001b[3m%\u001b[m\u000f                                                                                                                                          \u001b[32;1H \r"]
[22.713014, "o", "\u001b[24;44r\u001b[33;44r\u001b[12S\u001b[32;1H\u001b[Kin \u001b[36m\u001b[1mlambda-service/\u001b[m\u000f (node:v10.15.3) on \u001b[31m\u001b[1mmaster\u001b[m\u000f › \u001b[K\u001b[1;45r\u001b[32;48H\u001b[?2004h"]
[23.67382, "o", "\u001b[?25l\u001b[30m\u001b[42m\u001b[45;1H[blog] 1:zsh* 2:zsh-\u001b[39m                                                                                          \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[32;48H\u001b[34h\u001b[?25h"]
[23.683215, "o", "\u001b[32m\u001b[23;1H──────────────────────────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────────────────────────\u001b[m\u000f\u001b[9;38H\u001b[?2004l"]
[23.684874, "o", "\u001b[?25l\u001b[30m\u001b[42m\u001b[45;1H[blog] 1:Vim* 2:zsh-\u001b[39m                                                                                          \u001b[30m\"mbpro.local\" 01:21 26-May-19\u001b[m\u000f\u001b[9;38H\u001b[34h\u001b[?25h"]
[24.158165, "o", "\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m8\u001b[7C\u001b[1m1\u001b[10;38H\u001b[m\u000f"]
[24.410359, "o", "\u001b[21;105H\u001b[38;5;232m\u001b[48;5;192m20\u001b[7C\u001b[1m2\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m2\u001b[11;37H\u001b[m\u000f"]
[24.428187, "o", "\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m2\u001b[7C\u001b[1m3\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[12;38H\u001b[m\u000f"]
[24.439015, "o", "\u001b[1;32H\u001b[93m  3 \u001b[38;5;121mconst\u001b[39m config \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'../config/knexfile'\u001b[39m)                                                            \u001b[2;32H\u001b[93m  4 \u001b[38;5;121mconst\u001b[39m knex \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'knex'\u001b[39m)(config)                                                                    \u001b[3;32H\u001b[93m  5 \u001b[39m                                                                                                        \u001b[4;32H\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[5;32H\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[6;32H\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[7;32H\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[8;32H\u001b[93m 10 \u001b[96m/\u001b[?25l\u001b[m\u000f"]
[24.439195, "o", "\u001b[96m/ is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[9;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[10;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[11;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[12;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[13;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[14;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[15;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() "]
[24.441198, "o", "\u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[16;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[17;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[18;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[19;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m4\u001b[7C\u001b[1m4\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.457831, "o", "\u001b[1;32H\u001b[93m  4 \u001b[38;5;121mconst\u001b[39m knex \u001b[93m=\u001b[39m \u001b[95mrequire\u001b[39m(\u001b[95m'knex'\u001b[39m)(config)                                                                    \u001b[2;32H\u001b[93m  5 \u001b[39m                                                                                                        \u001b[3;32H\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[4;32H\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[5;32H\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;32H\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[7;32H\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[8;32H\u001b[93m 11 \u001b[96m// container that previouslly dest\u001b[?25l\u001b[m\u000f"]
[24.457994, "o", "\u001b[96mroyed the database connection\u001b[39m                                         \u001b[9;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[10;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[11;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[12;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[13;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[14;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[15;32H\u001b[93m 18 \u001b[39m}                                                                    "]
[24.458563, "o", "           "]
[24.460715, "o", "                        \u001b[16;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[17;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[18;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[19;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 23 \u001b[96m//\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m5\u001b[7C\u001b[1m5\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m1\u001b[12;36H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.472997, "o", "\u001b[1;32H\u001b[93m  5 \u001b[39m                                                                                                        \u001b[2;32H\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[3;32H\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[4;32H\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[5;32H\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[6;32H\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[7;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[8;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                             \u001b[?25l"]
[24.473222, "o", "                                         \u001b[9;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[10;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[11;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[12;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[13;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[14;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[15;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[15;139H"]
[24.475204, "o", "\u001b[16;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[17;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[18;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[19;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m7\u001b[7C\u001b[1m6\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.489915, "o", "\u001b[1;32H\u001b[93m  6 \u001b[96m//\u001b[39m                                                                                                      \u001b[2;32H\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[3;32H\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[4;32H\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[5;32H\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[6;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[7;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[?25l"]
[24.49009, "o", "\u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[9;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[10;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[11;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[12;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[13;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[14;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[15;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                   "]
[24.490342, "o", "   \u001b[15;139H"]
[24.492486, "o", "\u001b[16;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[17;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[18;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[19;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m9\u001b[7C\u001b[1m7\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.507311, "o", "\u001b[1;32H\u001b[93m  7 \u001b[96m// This handler will fist try and use the connection\u001b[39m                                                    \u001b[2;32H\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[3;32H\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[4;32H\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[5;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[6;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[7;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[8;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invo\u001b[?25l\u001b[m\u000f"]
[24.507499, "o", "\u001b[95mked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[9;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[10;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[11;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[12;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[13;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[14;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[15;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b["]
[24.507802, "o", "15;139H"]
[24.511814, "o", "\u001b[7;74H\u001b[46m{\u001b[12;36H}\u001b[16;32H\u001b[49m\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[17;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[18;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[19;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 26 \u001b[96m//\u001b[21;105H\u001b[38;5;232m\u001b[48;5;192m31\u001b[7C\u001b[1m8\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m1\u001b[12;36H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.52361, "o", "\u001b[1;32H\u001b[93m  8 \u001b[96m//\u001b[39m                                                                                                      \u001b[2;32H\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[3;32H\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[4;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[5;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m \u001b[46m{\u001b[49m                                                                 \u001b[7;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[8;32H\u001b[93m 15 \u001b[39m               \u001b[?25l               "]
[24.523764, "o", "                                                                          \u001b[9;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[10;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[11;32H\u001b[93m 18 \u001b[39m\u001b[46m}\u001b[49m                                                                                                       \u001b[12;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[13;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[14;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[15;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                        "]
[24.528359, "o", "\u001b[6;74H{\u001b[11;36H}\u001b[15;131H         \u001b[16;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[17;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[18;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[19;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m2\u001b[7C\u001b[1m9\u001b[12;36H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.541182, "o", "\u001b[1;32H\u001b[93m  9 \u001b[96m// It (incorrectly) assumes the lines above run each time this handler\u001b[39m                                  \u001b[2;32H\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[3;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[4;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[5;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[6;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[7;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[8;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, an\u001b[?25l\u001b[m\u000f"]
[24.541633, "o", "\u001b[96md manually close the connection to the database\u001b[39m                             \u001b[9;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[10;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[11;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[12;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[13;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[14;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[15;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[15;139H"]
[24.544292, "o", "\u001b[16;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[17;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[18;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[19;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m4\u001b[6C\u001b[1m20\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m2\u001b[12;37H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.557385, "o", "\u001b[1;32H\u001b[93m 10 \u001b[96m// is invoked, resulting in failed runs if the invocation happens in a\u001b[39m                                  \u001b[2;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[3;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[4;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[5;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[6;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[7;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[8;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres()\u001b[?25l"]
[24.557583, "o", ".finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[9;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[10;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[11;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[13;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[14;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[15;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[15;139H"]
[24.560328, "o", "\u001b[16;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[17;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[18;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[19;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 29 \u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m6\u001b[7C\u001b[1m1\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.574325, "o", "\u001b[1;32H\u001b[93m 11 \u001b[96m// container that previouslly destroyed the database connection\u001b[39m                                         \u001b[2;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[3;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[4;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[5;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[6;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[7;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[8;32H\u001b[93m 18 \u001b[39m}                 \u001b[?25l"]
[24.574494, "o", "                                                                                      \u001b[9;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[10;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[11;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[12;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[13;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[14;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[15;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[15;139H"]
[24.577892, "o", "\u001b[16;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[17;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[18;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[19;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m7\u001b[7C\u001b[1m2\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.58991, "o", "\u001b[1;32H\u001b[93m 12 \u001b[96m//\u001b[39m                                                                                                      \u001b[2;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[3;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[4;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[5;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[6;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[7;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[8;32H\u001b[93m 19 \u001b[39m                           \u001b[?"]
[24.590077, "o", "25l                                                                             \u001b[9;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[10;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[11;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[12;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[13;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[14;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[15;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[15;139H"]
[24.591849, "o", "\u001b[16;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[17;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[18;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[19;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 31 \u001b[39m  knex.initialize()\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m9\u001b[7C\u001b[1m3\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m2\u001b[12;37H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.606745, "o", "\u001b[1;32H\u001b[93m 13 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnection \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                 \u001b[2;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[3;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[4;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[5;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[6;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[7;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[8;32H\u001b[93m 20 \u001b[96m//\u001b[39m                         \u001b[?"]
[24.606936, "o", "25l                                                                             \u001b[9;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[10;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[11;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[13;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[14;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[15;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                       "]
[24.608471, "o", "                              \u001b[16;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[17;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[18;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[19;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 32 \u001b[21;105H\u001b[38;5;232m\u001b[48;5;192m41\u001b[7C\u001b[1m4\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.623779, "o", "\u001b[1;32H\u001b[93m 14 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnection'\u001b[39m)                                                       \u001b[2;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[3;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[4;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[5;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[6;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[7;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not \u001b[?25l"]
[24.623967, "o", "\u001b[m\u000f\u001b[96mexist\u001b[39m                                      \u001b[9;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[10;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[11;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[12;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[13;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[14;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[15;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                        "]
[24.626803, "o", "         \u001b[16;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[17;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[18;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[19;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m3\u001b[7C\u001b[1m5\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.639949, "o", "\u001b[1;32H\u001b[93m 15 \u001b[39m                                                                                                        \u001b[2;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[3;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[4;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[5;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[6;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[7;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[8;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                           \u001b[?25l"]
[24.640108, "o", "                                      \u001b[9;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[10;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[11;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[12;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[13;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[14;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[15;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[15;139H"]
[24.642345, "o", "\u001b[16;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[17;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[18;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[19;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m4\u001b[7C\u001b[1m6\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m2\u001b[12;37H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.6567, "o", "\u001b[1;32H\u001b[93m 16 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[2;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[3;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[4;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[5;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[7;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[8;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                       \u001b[?25l"]
[24.656862, "o", "                                               \u001b[9;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[10;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[11;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[12;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[13;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[14;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[15;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                 "]
[24.658429, "o", "         \u001b[16;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[17;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[18;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[19;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 35 \u001b[39m}\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m6\u001b[7C\u001b[1m7\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.675134, "o", "\u001b[1;32H\u001b[93m 17 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[2;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[3;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[4;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[5;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[6;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[7;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connec\u001b[?25l\u001b[m\u000f"]
[24.67537, "o", "\u001b[96mtion persisted\u001b[39m                             \u001b[9;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[10;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[11;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[12;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[13;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[14;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[15;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                              "]
[24.675683, "o", "       \u001b[15;139H"]
[24.677896, "o", "\u001b[16;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[17;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[18;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[19;32H\u001b[93m 35 \u001b[39m}                                                                                                       \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 36 \u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m8\u001b[7C\u001b[1m8\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.690423, "o", "\u001b[1;32H\u001b[93m 18 \u001b[39m}                                                                                                       \u001b[2;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[3;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[4;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[5;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[6;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[7;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[8;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                       \u001b[?25l                    "]
[24.690601, "o", "            \u001b[9;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[10;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[11;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[12;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[13;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[14;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[15;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[16;32H"]
[24.692512, "o", "\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[17;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[18;32H\u001b[93m 35 \u001b[39m}                                                                                                       \u001b[19;32H\u001b[93m 36 \u001b[39m                                                                                                        \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 37 \u001b[96m//\u001b[21;105H\u001b[38;5;232m\u001b[48;5;192m50\u001b[7C\u001b[1m9\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m1\u001b[12;36H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.707106, "o", "\u001b[1;32H\u001b[93m 19 \u001b[39m                                                                                                        \u001b[2;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[3;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[4;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[5;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[7;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[8;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                             \u001b[?25l"]
[24.707267, "o", "                                         \u001b[9;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[10;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[11;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[12;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[13;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[14;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[15;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[15;"]
[24.707485, "o", "139H"]
[24.710385, "o", "\u001b[16;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[17;32H\u001b[93m 35 \u001b[39m}                                                                                                       \u001b[18;32H\u001b[93m 36 \u001b[39m                                                                                                        \u001b[19;32H\u001b[93m 37 \u001b[96m//\u001b[39m                                                                                                      \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 38 \u001b[96m// returns a promise that will try and query the database\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m1\u001b[6C\u001b[1m30\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.722985, "o", "\u001b[1;32H\u001b[93m 20 \u001b[96m//\u001b[39m                                                                                                      \u001b[2;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[3;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[4;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[5;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[6;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[7;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[8;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[?25l"]
[24.723243, "o", "\u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[9;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[10;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[11;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[12;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[13;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[14;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[15;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                         "]
[24.723305, "o", "                "]
[24.725516, "o", "         \u001b[16;32H\u001b[93m 35 \u001b[39m}                                                                                                       \u001b[17;32H\u001b[93m 36 \u001b[39m                                                                                                        \u001b[18;32H\u001b[93m 37 \u001b[96m//\u001b[39m                                                                                                      \u001b[19;32H\u001b[93m 38 \u001b[96m// returns a promise that will try and query the database\u001b[39m                                               \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 39 \u001b[96m//\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m3\u001b[7C\u001b[1m1\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.74114, "o", "\u001b[1;32H\u001b[93m 21 \u001b[96m// This handler will first open a connection if one does not exist\u001b[39m                                      \u001b[2;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[3;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[4;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[5;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[6;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[7;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[8;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[?25l"]
[24.741311, "o", "\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[9;32H\u001b[93m 29 \u001b[39m                                                                                                        \u001b[10;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[11;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[12;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[13;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[14;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[15;32H\u001b[93m 35 \u001b[39m}                                                                                          "]
[24.741679, "o", "             \u001b[15;139H"]
[24.74447, "o", "\u001b[16;32H\u001b[93m 36 \u001b[39m                                                                                                        \u001b[17;32H\u001b[93m 37 \u001b[96m//\u001b[39m                                                                                                      \u001b[18;32H\u001b[93m 38 \u001b[96m// returns a promise that will try and query the database\u001b[39m                                               \u001b[19;32H\u001b[93m 39 \u001b[96m//\u001b[39m                                                                                                      \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 40 \u001b[38;5;121mconst\u001b[39m queryPostgres \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m5\u001b[7C\u001b[1m2\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m2\u001b[12;37H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[24.756931, "o", "\u001b[1;32H\u001b[93m 22 \u001b[96m// and then try and test the connection\u001b[39m                                                                 \u001b[2;32H\u001b[93m 23 \u001b[96m//\u001b[39m                                                                                                      \u001b[3;32H\u001b[93m 24 \u001b[96m// It correctly believes it's unable to trust that the connection persisted\u001b[39m                             \u001b[4;32H\u001b[93m 25 \u001b[96m// from the previous invocations.\u001b[39m                                                                       \u001b[5;32H\u001b[93m 26 \u001b[96m//\u001b[39m                                                                                                      \u001b[6;32H\u001b[93m 27 \u001b[38;5;121mconst\u001b[39m checkDatabaseConnectionProper \u001b[93m=\u001b[39m \u001b[93masync\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                     \u001b[7;32H\u001b[93m 28 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Invoked: checkDatabaseConnectionProper'\u001b[39m)                                                 \u001b[8;32H\u001b[93m 29 \u001b[39m               \u001b[?25l"]
[24.757116, "o", "                                                                                         \u001b[9;32H\u001b[93m 30 \u001b[39m  \u001b[95mconsole\u001b[39m.log(\u001b[95m'Re-init the database connection (if required)'\u001b[39m)                                          \u001b[10;32H\u001b[93m 31 \u001b[39m  knex.initialize()                                                                                     \u001b[11;32H\u001b[93m 32 \u001b[39m                                                                                                        \u001b[12;32H\u001b[93m 33 \u001b[39m  \u001b[96m// test the connection, and manually close the connection to the database\u001b[39m                             \u001b[13;32H\u001b[93m 34 \u001b[39m  \u001b[93mreturn\u001b[39m queryPostgres().finally(() \u001b[38;5;121m=>\u001b[39m knex.destroy())                                                  \u001b[14;32H\u001b[93m 35 \u001b[39m}                                                                                                       \u001b[15;32H\u001b[93m 36 \u001b[39m                                                                                                      "]
[24.757334, "o", "  \u001b[15;139H"]
[24.759862, "o", "\u001b[16;32H\u001b[93m 37 \u001b[96m//\u001b[39m                                                                                                      \u001b[17;32H\u001b[93m 38 \u001b[96m// returns a promise that will try and query the database\u001b[39m                                               \u001b[18;32H\u001b[93m 39 \u001b[96m//\u001b[39m                                                                                                      \u001b[19;32H\u001b[93m 40 \u001b[38;5;121mconst\u001b[39m queryPostgres \u001b[93m=\u001b[39m () \u001b[38;5;121m=>\u001b[39m {                                                                           \u001b[20;32H                                                                                                            \u001b[20;32H\u001b[93m 41 \u001b[39m  \u001b[93mreturn\u001b[39m knex\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m6\u001b[7C\u001b[1m3\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[12;38H\u001b[34h\u001b[?25h\u001b[m\u000f"]
[26.155162, "o", "\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m5\u001b[7C\u001b[1m2\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m2\u001b[11;37H\u001b[m\u000f"]
[26.343008, "o", "\u001b[21;106H\u001b[38;5;232m\u001b[48;5;192m3\u001b[7C\u001b[1m1\u001b[9C\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m3\u001b[10;38H\u001b[m\u000f"]
[26.68927, "o", "\b\b\u001b[48;5;242m  \u001b[49mk\u001b[48;5;242mnex.initialize() \u001b[21;32H\u001b[38;5;232m\u001b[48;5;153m \u001b[1mV-LINE\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;153m \r\n\u001b[39m\u001b[49m\u001b[1m-- VISUAL LINE --\u001b[21;40H\u001b[m\u000f\u001b[38;5;153m\u001b[48;5;238m  masterɆ \u001b[C\u001b[48;5;235m src/handlers/rds.js  \u001b[C javascript \u001b[C\u001b[48;5;238m utf-8[unix] \u001b[38;5;232m\u001b[48;5;153m  53% \u001b[1m☰   31/58 \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;153m :  3 \u001b[38;5;166m\u001b[10;38H\u001b[m\u000f"]
[27.939108, "o", "\b\b  knex.initialize()\u001b[K\u001b[21;32H\u001b[38;5;232m\u001b[48;5;192m \u001b[1mNORMAL\u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m \u001b[38;5;192m\u001b[48;5;238m  masterɆ \u001b[C\u001b[48;5;235m src/handlers/rds.js  \u001b[C javascript \u001b[C\u001b[48;5;238m utf-8[unix] \u001b[38;5;232m\u001b[48;5;192m  53% \u001b[1m☰   31/58 \u001b[m\u000f\u001b[38;5;232m\u001b[48;5;192m :  3 \u001b[38;5;166m\u001b[39m\u001b[49m\r\n\u001b[K\u001b[10;38H"]
[28.060167, "o", "\u0007"]
[29.067471, "o", "\u0007"]
[29.912133, "o", "\u001b[1;45r\u001b[m\u000f\u001b[?1l\u001b>\u001b[H\u001b[J\u001b[34h\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1006l\u001b[?1005l\u001b[?1049l"]
[29.91241, "o", "[detached (from session blog)]\r\n"]
